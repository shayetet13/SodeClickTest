const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config({ path: './env.development' });

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
const createTestUser = async () => {
  try {
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/love_app');
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡πÉ‡∏´‡∏°‡πà
    const newUser = new User({
      username: `testuser_${Date.now()}`,
      email: `testuser_${Date.now()}@example.com`,
      password: 'password123',
      firstName: 'Test',
      lastName: 'User',
      displayName: 'Test User',
      dateOfBirth: new Date('1995-01-01'),
      gender: 'female',
      lookingFor: 'male',
      location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø', // ‡πÄ‡∏û‡∏¥‡πà‡∏° location ‡∏ó‡∏µ‡πà required
      coordinates: {
        type: 'Point',
        coordinates: [100.5018, 13.7563] // ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø
      },
      isActive: true,
      isVerified: true
    });

    await newUser.save();
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡πÉ‡∏´‡∏°‡πà: ${newUser.username}`);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ user ‡∏°‡∏µ gpsLocation ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const userWithLocation = await User.findById(newUser._id);
    console.log('üìç gpsLocation:', userWithLocation.gpsLocation);

    // ‡∏£‡∏±‡∏ô script auto-add GPS location
    const autoAddGpsLocation = require('./autoAddGpsLocation');
    await autoAddGpsLocation();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    const updatedUser = await User.findById(newUser._id);
    console.log('üìç gpsLocation ‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:', updatedUser.gpsLocation);

    // ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô user ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const totalUsers = await User.countDocuments();
    const usersWithLocation = await User.countDocuments({
      gpsLocation: { $exists: true, $ne: null },
      'gpsLocation.lat': { $exists: true },
      'gpsLocation.lng': { $exists: true }
    });

    console.log(`üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:`);
    console.log(`   - User ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalUsers} ‡∏Ñ‡∏ô`);
    console.log(`   - User ‡∏ó‡∏µ‡πà‡∏°‡∏µ gpsLocation: ${usersWithLocation} ‡∏Ñ‡∏ô`);
    console.log(`   - User ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ gpsLocation: ${totalUsers - usersWithLocation} ‡∏Ñ‡∏ô`);

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    await mongoose.disconnect();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB');
  }
};

// ‡∏£‡∏±‡∏ô script
if (require.main === module) {
  createTestUser();
}

module.exports = createTestUser;
