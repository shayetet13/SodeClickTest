const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config();

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/love';

async function createUserProfile() {
  try {
    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connected to MongoDB');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á user profile ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    const sampleUser = new User({
      username: 'testuser',
      email: 'test@example.com',
      password: 'password123', // ‡πÄ‡∏û‡∏¥‡πà‡∏° password
      firstName: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      lastName: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
      displayName: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
      nickname: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      dateOfBirth: new Date('1995-05-15'),
      gender: 'male',
      lookingFor: 'female',
      bio: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á ‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≠‡∏á‡∏´‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏™‡∏ô‡πÉ‡∏à‡πÉ‡∏ô‡∏™‡∏¥‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô',
      location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      occupation: {
        job: '‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏°‡∏≠‡∏£‡πå',
        company: 'Tech Company'
      },
      education: {
        level: 'bachelor',
        institution: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå'
      },
      physicalAttributes: {
        height: 175,
        weight: 70
      },
      religion: 'buddhist',
      languages: ['thai', 'english'],
      pets: {
        hasPets: true,
        petTypes: ['dog']
      },
      lifestyle: {
        smoking: 'never',
        drinking: 'occasionally',
        exercise: 'regularly',
        diet: 'omnivore',
        sleepSchedule: 'flexible',
        travel: 'love_travel',
        children: 'open_to_children'
      },
      interests: [
        {
          category: 'sports',
          items: ['‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•', '‡∏ß‡∏¥‡πà‡∏á', '‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥']
        },
        {
          category: 'music',
          items: ['‡∏õ‡πá‡∏≠‡∏õ', '‡∏£‡πá‡∏≠‡∏Ñ', '‡πÅ‡∏à‡πä‡∏™']
        },
        {
          category: 'travel',
          items: ['‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ï‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®', '‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û', '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°']
        }
      ],
      promptAnswers: [
        {
          question: 'my_special_talent',
          answer: '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏µ‡∏ï‡∏≤‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏î‡πâ'
        },
        {
          question: 'way_to_win_my_heart',
          answer: '‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Å‡∏±‡∏ô'
        },
        {
          question: 'dream_destination',
          answer: '‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô - ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°'
        }
      ],
      profileImages: [
        'https://placehold.co/500x600/6366f1/ffffff?text=Profile+1',
        'https://placehold.co/500x600/8b5cf6/ffffff?text=Profile+2',
        'https://placehold.co/500x600/06b6d4/ffffff?text=Profile+3'
      ],
      isVerified: true,
      membership: {
        tier: 'diamond',
        startDate: new Date(),
        endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 ‡∏ß‡∏±‡∏ô
        autoRenew: true
      },
      coins: 1000,
      votePoints: 500,
      isOnline: true,
      lastActive: new Date(),
      coordinates: {
        type: 'Point',
        coordinates: [100.5018, 13.7563] // ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£
      },
      role: 'user'
    });

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å user
    const savedUser = await sampleUser.save();
    console.log('‚úÖ Created user profile successfully!');
    console.log('User ID:', savedUser._id);
    console.log('Username:', savedUser.username);
    console.log('Email:', savedUser.email);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á admin user
    const adminUser = new User({
      username: 'admin',
      email: 'admin@example.com',
      password: 'admin123', // ‡πÄ‡∏û‡∏¥‡πà‡∏° password
      firstName: '‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô',
      lastName: '‡∏£‡∏∞‡∏ö‡∏ö',
      displayName: '‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏£‡∏∞‡∏ö‡∏ö',
      nickname: '‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô',
      dateOfBirth: new Date('1990-01-01'),
      gender: 'male',
      lookingFor: 'female',
      bio: '‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö sodeclick',
      location: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      occupation: {
        job: 'System Administrator',
        company: 'Sodeclick'
      },
      education: {
        level: 'master',
        institution: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏°‡∏´‡∏¥‡∏î‡∏•'
      },
      physicalAttributes: {
        height: 180,
        weight: 75
      },
      religion: 'buddhist',
      languages: ['thai', 'english'],
      pets: {
        hasPets: false
      },
      lifestyle: {
        smoking: 'never',
        drinking: 'never',
        exercise: 'regularly',
        diet: 'omnivore',
        sleepSchedule: 'flexible',
        travel: 'occasional_travel',
        children: 'open_to_children'
      },
      interests: [
        {
          category: 'technology',
          items: ['‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°', 'AI', 'Machine Learning']
        },
        {
          category: 'music',
          items: ['‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Ñ', '‡πÅ‡∏à‡πä‡∏™']
        }
      ],
      profileImages: [
        'https://placehold.co/500x600/ef4444/ffffff?text=Admin+Profile'
      ],
      isVerified: true,
      membership: {
        tier: 'platinum',
        startDate: new Date(),
        autoRenew: true
      },
      coins: 9999,
      votePoints: 9999,
      isOnline: true,
      lastActive: new Date(),
      coordinates: {
        type: 'Point',
        coordinates: [100.5018, 13.7563] // ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£
      },
      role: 'admin'
    });

    const savedAdmin = await adminUser.save();
    console.log('‚úÖ Created admin user successfully!');
    console.log('Admin ID:', savedAdmin._id);
    console.log('Admin Username:', savedAdmin.username);

    console.log('\nüéâ Script completed successfully!');
    console.log('You can now test the profile API with these user IDs:');
    console.log('Regular User ID:', savedUser._id);
    console.log('Admin User ID:', savedAdmin._id);

  } catch (error) {
    console.error('‚ùå Error creating user profile:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå Disconnected from MongoDB');
  }
}

// ‡∏£‡∏±‡∏ô script
createUserProfile();
